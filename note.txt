https://www.youtube.com/watch?v=kwFwN1M0M98&list=PLRKyZvuMYSIPFWe4ruCd7r9BozthKyXHB
https://www.youtube.com/watch?v=63wlDlX334w&list=PLUVqY59GNZQPDMYeta4Rq1hoUeilmSvda

res.status(400) Bad Request
res.status(500) internal server error
res.status(200) OK
res.status(401) Unauthorized
res.status(201) date created
res.status(404) page not found.
res.status(403) forbidden

Global variables can be made local (private) with closures.

To add getters and setters in the class, use the get and set keywords.



js file ko hamesha body ke last me rkhate hai

hot agar koi correction krna hai to feature me

The static keyword defines static methods for classes. Static methods are called directly on the class ( Car from the example above) - without creating an instance/object ( mycar ) of the class

super() is used to we can get the properties of parent class or parent constructor method
super(...) to call a parent constructor (inside our constructor only).


"..." is called spread operator in js and also rest operator jo add subtract krta ho arguments ko .

for loop me "in" object ke liye krte hai jisme key value pair hoti hai.

for loop me "of" ka use direct data ko excess krne ke liye krte hai.

decimal ke kitne place tak print karana hai ye tofixed() funtion batata hai argument me number dalte hai jitne number tak decimal chahte hai.

asynchronous means I will finish later ex: setTimeOut();

jab function ke andar function parameter pass krte hai to parameter ke function me bracket nhi lagate hai.

getHours() , getMinutes(), getSeconds(), se 11:23:50 ke jaise aata hai

async and await make promises easier to write"

async makes a function return a Promise.

await makes a function wait for a Promise.

jab v koi data server se aati hai to vo ek string me aati hai usko object me convert krte hai

There are two ways of event propagation in the HTML DOM, bubbling and capturing.

ejs file template engine hoti hai nodejs me

nodejs v8 engine use krta hai run krne ke liye and javascript ko run krne ke liye v8 engine use hota hai.
opensource mtlb hm contribute v kr sakte hai, bina payment ke use kr sakte hai.
nodejs api ke liye use krte hai mostly ye server side run enviremonet hota hai.


module.exports se js file ko exports krte hai. fir usko jaha use krna hota hai usme import krte hai.


(__dirname) batata hai ki kisi file ki directory ya location kya hai.

global module jo ki import nhi krne parte hai jaise console, __dirname

non-global module jo ki import krne parte hai jaise file system buffer etc

http : nodejs ke andar request and response ko handle krte hai and api ke request and response ko yahi handle krta hai

res = means client ko kuch n kuch send kr rhe hai
req = means server se kuch mang rhe hai. request kr rhe hai

nodejs single threaded hoti hai and ye async v hoti hai.

writeHead se api create krte hai nodejs me content-Type: json type data send krte hai.

jab multiple users ho n to object ko array ke andar lena parta hai.


nodejs architecture.
1. call stack : isme har function register hota hai koun function pahle hoga koun baad me;

nodejs api and callback queue har baar kaam me nhi aata hai.

nodejs api: json wali api nhi hai ye jo 2 programming language ke bich me jo interaction hota hai usme ka nodejs api hai yaha c++ and javascript ho rha hai ye setTimeOut ke liye special hota hai. jiska setTimeout kam hota hai usko callback queue me pahle bhej deta hai,

server hamesha response 'res' krta hai and jab deta bhejna ho server pe to 'req' bolte hai

common header add krne ke liye <%- include('common/header'); %>
variable ko show karane ke liye <%= variable_name %>

jaha authentication use krna hai ya req ya response me kuch changes krna hai ya routes me conditions lagana hia  vaha middleware use krte hai.

req.body.name form se data lene ke liye use hota hai.
req.query.age url me jo age dete hai usme ka age excess krne ke liye use krte hai

routed middleware me kisi particular route ke upar laga sakte hai conditions ki aisa hoga to hi ye wala route chalega

grouped route level bahut sare routes ke upar ek sath middleware lagana esme var route =  express.Router() library ko use krke krne se perfect mana jata hai 
route.use(middleware) and sare routing me app.get ke place pe route.get likhate hai

get method get krna , post method post and put method update and delete method data ko delete krne ke liye use krte hai

file ko upload krne ke liye multer library use krte hai

event jo onclick se hota hai and emmiter jo click hone ke baad generate hota hai use emmiter krte hia but node js me button hota nhi hai to ese api se banante hai button

pepl command line tool hota hai jisme javacript and node js ko run krte hai.

agar method different hai to route same rakh sakte hai ex: app.get('/',function()) and app.post('/',function()).

app.use(express.json()); esase jo request ke andar body aati hai use json format me convert krti hai dynamic data name email sab lane ke liye use hota hai req.body.name or req.body.name

const path = require('path')
pathfile =  path.join(__dirname,crud), crud folder hai to es folder tk ka complete path de dega

What Are Buffers? The Buffer class in Node. js is designed to handle raw binary data. Each buffer corresponds to some raw memory allocated outside V8. Buffers act somewhat like arrays of integers, but aren't resizable and have a whole bunch of methods specifically for binary data.

Generator:- ES6 introduced a new way of working with functions and iterators in the form of Generators (or generator functions). A generator is a function that can stop midway and then continue from where it stopped. In short, a generator appears to be a function but it behaves like an iterator.

git pull se new code aa jata hai jo ki updated code hota hai

hot agar koi correction krna hai to feature me

super() is used to we can get the properties of parent class or parent constructor method

kisi v array ya object ko split ya expend krne ke liye spread operator use krte hai.

jab function ke argument me use ho rha ho to use rest operator bolte hai AND array ban jata hai result me jo argument hota hai.


If the response from the HTTP server is supposed to be displayed as HTML, you should include an HTTP header with the correct content type:

JSON Web Token is an open standard for securely transferring data within parties using a JSON object.

JWT has three parts 
Header
Payload, (registered claim, public claim, private claim) these are payload types 
Signature

Node.jsâ€™ crypto module. The Crypto.randomBytes() method generates cryptographically strong pseudo-random data for a given number of bytes. 

Technology Used
Token: JWT
Password Hash: bcryptjs
Database: MongoDB

JWT is a header

#filing is used as private making ex private filing = #private

var chor ke let use kre and ES6 me const include hua hai

ek file me ek hi default bana sakte hai default banane se ek fayda hai ki 'use as' krke name nhi badalana hoga and import krne ke liye double curly bracket ka use nhi krna hota hai.

class ke andar property mtlb variable and agar method banana ho mtlb function banana hai

agar class ke andar property banana ho to constructor() banake variable banate hai like
this.name = "balram"; and class me
method banane ke liye age koi function name nhi rakhte hai. like
buy(){
};

class ke andar jab v variable ko use krna hai to this.variable_name likhte hai.
and class ke bahar use krna ho to dot (.) likhke use krte hai.

jab constructor ke bahar vairable banane ho property (variable) banane ho to this nhi likhate hai 

array ke andar har value  ko alag alag variable dene ko destructuring bolte hai.

reference type : array, object ek object ko dusre obect se assing or point kr deta hai
premitive type : string number, esme assign oparator se ek variable se dusre variaable me copy ho jata hai.

let user = new Object(); // "object constructor" syntax
let user = {};  // "object literal" syntax

nisa gurgain

When we want to export a single class/variable/function from one module to another module, we use the module.exports way.	
When we want to export multiple variables/functions from one module to another, we use exports way.

Node JS is a fast JavaScript runtime environment that we use to build server-side applications, but it does not know how to perform serving files, handling requests, and handling HTTP methods, so this is where express js comes in.

The assign() method, being a static method, is called using the Object class name.


------------ for rebasing your branch ----------
eska short me yahi mtlb hota hai ki jis jis log ne kaam kiya hai us file me sabka code aa jayega apne new created branch me

git checkout your-branch-name
git fetch origin
git rebase origin/develop
git push --force origin your-branch-name


https://zoom.us/w/93793186110?tk=CRlFBgd2NHXGqJcafaUmx6Nknkk9ic7PDdpO-k77KAU.DQMAAAAV1oJxPhZtbjRGOHNSQVItZTNfUnVYSVZjc0JBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA





---------------------------------   React   -------------------------------

A JavaScript library for building user interfaces

Views are what the user sees rendered in the browser

Babel is a JavaScript compiler

Flux is a pattern that helps to keep your data unidirectional. This makes the application more flexible that leads to increase efficiency.


agar koi chis baar bar use ho to use component me banate hai.
component : reusable building block

Props in React?-  We use props in React to pass data from one component to another component
props full form is : properties

JSX allows us to write HTML in React.

Middleware functions are functions that have access to the request object (req), the response object (res), and the next middleware function in the application's request-response cycle.

JSX(JavaScript Extension)

In react there is two type of component
1. funtional component
2. class component


The functional component is also known as a stateless component because they do not hold or manage state.


class component: is also known as a stateful component because they can hold or manage local state

element ko hi tag bolte hai html me.

appendChild() ke argument me data dalte hai jo append krna hota hai end me, child mtlb end me 

npm init --yes this is used for default values for init.

component ke andar jo argument pass krte hai usi ko props krte hai.

.toISOString() se object ko string me change krte hai.


state me v variable ke jaise data store krte hai but state me jaise data aati hai component ko pata chal jata hai ki koi data aa gyi hai update krna hai but variaable ke case me aisa nhi hota hai.

class component me jab v constructor banate hai to usme super() method jaroor call krte hai.


state: data container hota hai. like variable


state ko bahar use kr sakte hai. nhi lekin kuch unauthenticate tarika hai jiske help se kr sakte hai,
The state is a built-in React object that is used to contain data or information about the component

state: state public hoti hai.

A parameter is a named variable passed into a function.

class me render function se return hota hai and function me return krte hai

constructor html render hone se pahle ready/load ho jata hai.

component destroy hone pe life cycle fir se dubara chalegi.

componentDidMount tab call hota hai jab sara html and css page load ho jata hai uske baad componentDidMount automatic call hota hai and esme api call sab krte hai taki sabhi pahle load ho chuke ho.

render v lifecycle ka method hi hota hai.

agar componentDidMount ke upar state update karani ho to condition banake karate hai varna infinite loop ban jayega ya aap componentDidMount ke bahar stateupdate karaye to jyada thik hai.

componentDidUpdate ke 3 parameter hote hai preprops, prestate and snapshot
this event is happen when component is updated

render me condition v nhi lagate and ye har baar chalta hai esliye render ke andar setState() nhi kara sakte hai.

shouldComponentUpdate : apne aap me render funtion ko block kr deta hai and ye bydefault behaviour hai agar shouldComponentUpdate ko return true kr de to fir render kaam krne lag jata hai

conditional API call karane ke liye componentDidUpdate ko use krte hai
agar unconditonal API call karani hai to componentDidMount use krte hai


componentWillUnmount: jab v component ko remove krna ho to componentWillUnmount ko call krate hai mtlb us component ko DOM se hide krte hai

shouldComponentUpade pahle call hota hai and componentDidUpadate baad me call  hota hai

functional component ke upar life cycle use krne ke liye hooks use krte hai


class component lifecycle me bydefault kuch keywords hote hai jaise state, life cycle, pure etc


class ke andar lifecycle method hote hai


usestate ek hook hai use ka baad agar koi world hai to samajh jao ye hook hai ex usestate useeffect useRef etc


map function ye ek new array create krta hai jo existing array se banta hai and existing array ko touch v nhi krta hai.
ye ek callback function v leta hai as a parameter

array.map(function(currentvalue, index, arr), thisValue) ---index and arr is optional

map() function calls the provided function once for each element in array, in order

 

hooks function component ke liye use hota hai


useEffect- esme akele componentDidMount componentDidUpdate and componentWillUnmount ke combined form hai.
useEffect me jo parameter hota hai vo v as a function pass hota hai. And jab v state update hogi to useEffect hook call hoga. ya component banega tb useEffect chalta hai.


map ya for loop dono ek hi chis hai but react me map use hota hai looping ke liye. aisa esliye krte qki jo return function jo hota hai n usme map support karta hai n ki for loop
map ek function hai. 


react-fragment: ye ek pattern hota hai jo multiple components ya multiple elements ko handle krta hai.

lifting state up ya send data child to parent component dono same hi hota hai 

pure component ek feature hota hai jo class component me use hota hai aur ye component ki re-rendering ko rokta hai and functional component ke liye memo use hota hai.

constructor jab v use kro to usme super() keyword jaroor lagaye

Ref ke help se DOM ki direct modify kr sakte hai.
Ref thori speed slow kr deti hai. Qki Ref react ko use nhi krta hai. Direct Dom ko use krta h.
Ref me kisi component ke kisi ek input field ya kisi ek element ke DOM ko change krte hai.
useRef functional component me DOM ko modify krne ke liye use krte hai.

jab Input and button dono alag alag component me ho to forwardRef use krte hai.


Uncontrolled me koun sa hook use krte hai. - "useRef"

jab react ke andar input field ko state se control krte hai to ese controlled component bolte hai.

HOC (high order component)Ek component dusre component ko as a props leta ho and component return krta ho.

react-router se related jo v kaam hota hai use <BrowseRouter></BrowserRouter> ke andar hi likhate hai varna error dikhega


router me <Link> use krte hai q ki link refresh nhi hota hai and anchor tag refresh hota hai.

Navigate me to "/" dete hai jis route pe jana ho <Navigate to = "home">

params: ek hi routing ke andar aur v route jaise user/name yr user/id , id to bahut sare honge to yaha params use krte hai.

Link me className nhi dete hai agar className dena ho to NavLink use krte hai.


Redux: whole application data ko store krta hai.

jab ek hi component me data transfer krna hota hai to usme usestate use krte hai.

And jab ek components se dusre component me data transfer krni ho to props use krte hai.


useParams: use to get dinamic routing value , localhost:3000/user/100
useSearchParams: Use to get query params,  localhost:3000/user?id=100


database se data nikalne ke liye koi server side language use krte hai jaise nodejs python java etc ye database se data nikal ke de deta hai jisko ui pe show kra dete hai.

GET krte hai get krne ke liye
POST krte hai data ko bhejne ke liye
PUT krte update krne ke liye
DELETE krte hai delete krne ke liye

PUT is a method of modifying resource where the client sends data that updates the entire resource . PATCH is a method of modifying resources where the client sends partial data that is to be updated without modifying the entire data


The useState hook is used for storing variables that are part of your application's state and will change as the user interacts with your website. The useEffect hook allows components to react to lifecycle events such as mounting to the DOM, re-rendering, and unmounting.


useState

The useState hook is a function that takes one argument, which is the initial state, and it returns two values: the current state and a function that can be used to update the state.


what is call back function:-

"I will call back later!"
A callback is a function passed as an argument to another function
This technique allows a function to call another function
A callback function can run after another function has finished



jab api ko json me convert krte hai to fir se promise return krta hai to fir .then use krte hai. 

useEffect callback function leta hai jab v api call krana ho to useEffect hook ka use kiya jata hai.

The onchange event occurs when the value of an element has been changed. For radiobuttons and checkboxes, the onchange event occurs when the checked state has been changed. Tip: This event is similar to the oninput event.


jab v api hit hota hai to 1st baar check krta hai ki sever available hai ya nhi (Console me Network ke andar) fir dusri baar me data ko send krta hai database me

Context API kahi se v kahi data ko le jana ho to ese use krte hai varna normal data move krna ho to root node me le jate hai fir root node se hote hue dusri jagah le jate hai.


axios : ye external api ya url ko hit krne ke liye use hota hai. ye npm ka library hota hai
agar app same hai to internal url bolte hai agar dusra app (component) hai to usko external url bolte hai.

useEffect ko ek baar chalene ke liye black array pass kr dete hai.

exact : ye Route me likhate hai agar exact likh de to route me exact yahi hona chahiye agar kuch v aage piche hota to nhi lega like path ='/music'  path ='ssd/music/name' yaha kaam nhi krega exact '/music' dekhega tabhi hoga

React is known as ReactJs, which is a JavaScript library to build single-page web applications. Besides, React Native is a React JS-based framework to design mobile apps.


The Typography is a reusable component that helps presenting the content in a React application. It could trim down a lot of time as the application grows.

nackbars provide brief notifications. The component is also known as a toast.

label vo hota hai jo text me likhate hai.


agar height width define krna ho to usko <Box></Box> ke andar daal ke likhate hai.


















----------------------------- socket.io ----------------------------

 You can create and fire custom events using the socket.emit

 //Send this event to everyone in the room.
   io.sockets.in("room-"+roomno).emit('connectToRoom', "You are in room no. "+roomno);

Rooms: this is an arbitrary channels that sockets can join and leave. this is called rooms.

bidirectional communication means server pe jaise update ayega vaise client ko message kr dega, client ko baar baar message krke puchna nhi parega ki mere liye kuch data aayi hai kya.

The Socket.IO connection begins with the handshake

jab sarif sarafat chorte hai to bahut bhayankar ho jate hai .

websocket: it is a bidirectional communication protocol




https://www.jqueryscript.net/animation/Create-An-Image-Explosion-Effect-In-jQuery-imgexplode-js.html#google_vignette

https://www.sliderrevolution.com/resources/css-animated-background/

https://www.jqueryscript.net/animation/jQuery-Plugin-For-Configurable-Explosion-Animation-boomjs.html#google_vignette

https://www.jquery-az.com/jquery/demo.php?ex=143.0_1

https://codepen.io/DollarAkshay/pen/zEpwmY?editors=1010

https://codepen.io/anthonygreco/pen/PGPVJz



shift+ctrl+â†µ Insert line above.
ctrl+â†µ Insert line below.
shift+ctrl+K. Delete line.
shift+alt+UP. Copy line up.
shift+alt+DOWN. Copy line down.
alt+UP. Move line up.
alt+DOWN. Move line down.



http://localhost:8080/dashboard

http://localhost:8081/devops/restore

https://balram-test-companion.jupitice.com/authentication/default/login?continue=%2Fdevops%2Frestore%3F%26host%3Dbalram-test-companion.jupitice.com

https://jenkins.jupitice.com/view/Test/job/Deploy-artemis-test/

https://jupitice.atlassian.net/jira/software/c/projects/AR/boards/8

http://localhost/phpmyadmin/index.php?target=server_sql.php



